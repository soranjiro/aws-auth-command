name: release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name to publish (e.g., v0.2.0)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  build-artifacts:
    name: Build artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: awx
            asset_name: awx-x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: awx
            asset_name: awx-aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: awx
            asset_name: awx-x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: awx
            asset_name: awx-aarch64-unknown-linux-gnu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Linux)
        if: runner.os == 'Linux'
        run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Strip binary (macOS)
        if: runner.os == 'macOS'
        run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Create tarball
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}

      - name: Prepare dist
        run: |
          mkdir -p dist
          mv target/${{ matrix.target }}/release/${{ matrix.asset_name }}.tar.gz dist/
          if command -v shasum >/dev/null 2>&1; then
            shasum -a 256 dist/${{ matrix.asset_name }}.tar.gz > dist/${{ matrix.asset_name }}.tar.gz.sha256
          else
            sha256sum dist/${{ matrix.asset_name }}.tar.gz > dist/${{ matrix.asset_name }}.tar.gz.sha256
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: dist/*


  publish-release:
    name: Create/Update GitHub Release
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Publish Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || inputs.tag }}
          files: |
            dist/**/awx-*.tar.gz
            dist/**/awx-*.tar.gz.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    name: Update Homebrew Formula
    needs: publish-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Calculate SHA256 for release assets
        id: calc_shas
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          MAC_ARM_URL="https://github.com/soranjiro/aws-auth-command/releases/download/v${VERSION}/awx-aarch64-apple-darwin.tar.gz"
          MAC_INTEL_URL="https://github.com/soranjiro/aws-auth-command/releases/download/v${VERSION}/awx-x86_64-apple-darwin.tar.gz"
          LINUX_ARM_URL="https://github.com/soranjiro/aws-auth-command/releases/download/v${VERSION}/awx-aarch64-unknown-linux-gnu.tar.gz"
          LINUX_INTEL_URL="https://github.com/soranjiro/aws-auth-command/releases/download/v${VERSION}/awx-x86_64-unknown-linux-gnu.tar.gz"

          curl -L -o mac_arm.tar.gz "$MAC_ARM_URL"
          curl -L -o mac_intel.tar.gz "$MAC_INTEL_URL"
          curl -L -o linux_arm.tar.gz "$LINUX_ARM_URL"
          curl -L -o linux_intel.tar.gz "$LINUX_INTEL_URL"

          echo "SHA_MAC_ARM=$(sha256sum mac_arm.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "SHA_MAC_INTEL=$(sha256sum mac_intel.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "SHA_LINUX_ARM=$(sha256sum linux_arm.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "SHA_LINUX_INTEL=$(sha256sum linux_intel.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Update Formula URLs and SHAs
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          sed -i "s|/download/v[0-9.\-]*/awx-aarch64-apple-darwin.tar.gz|/download/v${VERSION}/awx-aarch64-apple-darwin.tar.gz|" Formula/awx.rb
          sed -i "s|/download/v[0-9.\-]*/awx-x86_64-apple-darwin.tar.gz|/download/v${VERSION}/awx-x86_64-apple-darwin.tar.gz|" Formula/awx.rb
          sed -i "s|/download/v[0-9.\-]*/awx-aarch64-unknown-linux-gnu.tar.gz|/download/v${VERSION}/awx-aarch64-unknown-linux-gnu.tar.gz|" Formula/awx.rb
          sed -i "s|/download/v[0-9.\-]*/awx-x86_64-unknown-linux-gnu.tar.gz|/download/v${VERSION}/awx-x86_64-unknown-linux-gnu.tar.gz|" Formula/awx.rb

          sed -i "s|sha256 \"SHA256_MAC_ARM\"|sha256 \"${{ steps.calc_shas.outputs.SHA_MAC_ARM }}\"|" Formula/awx.rb
          sed -i "s|sha256 \"SHA256_MAC_INTEL\"|sha256 \"${{ steps.calc_shas.outputs.SHA_MAC_INTEL }}\"|" Formula/awx.rb
          sed -i "s|sha256 \"SHA256_LINUX_ARM\"|sha256 \"${{ steps.calc_shas.outputs.SHA_LINUX_ARM }}\"|" Formula/awx.rb
          sed -i "s|sha256 \"SHA256_LINUX_INTEL\"|sha256 \"${{ steps.calc_shas.outputs.SHA_LINUX_INTEL }}\"|" Formula/awx.rb

          sed -i "s|assert_match \"awx.*\"|assert_match \"awx ${VERSION}\"|" Formula/awx.rb

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add Formula/awx.rb
          git commit -m "Update Homebrew formula to version ${{ steps.get_version.outputs.VERSION }}"
          git push
